{"version":3,"sources":["components/TopNavbar/TopNavbar.js","components/ClientCard/ClientCard.js","containers/Clients/Clients.js","components/ClientDetails/ClientDetails.js","containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["TopNavbar","state","searchInput","_this2","this","_this$props","props","classes","searchChanged","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","variant","Typography_default","title","color","grow","search","searchIcon","Search_default","InputBase_default","value","onChange","e","setState","target","placeholder","inputRoot","input","inputInput","Component","withStyles","theme","width","flexGrow","menuButton","marginLeft","marginRight","Object","defineProperty","display","paddingLeft","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","height","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","card","maxWidth","media","_ref","name","company","catchPhrase","id","selectUser","Card_default","CardActionArea_default","onClick","CardMedia_default","image","CardContent_default","gutterBottom","component","Layout","users","map","user","ClientCard_ClientCard","key","row","flexDirection","avatar","margin","Fragment","Avatar_default","alt","src","style","index_es","currentUser","fetch","then","response","json","data","console","log","res","catch","error","_this3","components_TopNavbar_TopNavbar","Clients_Layout","userId","ClientDetails_ClientDetails","App","CssBaseline_default","Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab80c1ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    paddingLeft: '10px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block'\r\n    }\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto'\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%'\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nclass TopNavbar extends Component {\r\n  state = { searchInput: '' };\r\n  render() {\r\n    const { classes, searchChanged } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar variant=\"dense\">\r\n            <Typography className={classes.title} variant=\"h5\" color=\"inherit\">\r\n              Users and stuff\r\n            </Typography>\r\n            <div className={classes.grow} />\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                value={this.state.searchInput}\r\n                onChange={e => {\r\n                  this.setState({ searchInput: e.target.value });\r\n                  searchChanged(e.target.value);\r\n                }}\r\n                placeholder=\"Searchâ€¦\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TopNavbar);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345\r\n    // height: 450\r\n  },\r\n  media: {\r\n    height: 150\r\n  },\r\n  root: {\r\n    // padding: '40px'\r\n    paddingTop: '20px',\r\n    paddingBottom: '20px'\r\n  }\r\n};\r\n\r\nfunction ClientCard({ classes, name, company, catchPhrase, id, selectUser }) {\r\n  //   const [selectedUser, setSelectedUser] = useState(null);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardActionArea onClick={() => selectUser(id)}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image=\"https://via.placeholder.com/600/a08784\"\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n              {company}\r\n            </Typography>\r\n            <Typography component=\"p\">{catchPhrase} </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nClientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ClientCard);\r\n","import React, { Component } from 'react';\r\nimport ClientCard from '../../components/ClientCard/ClientCard';\r\n\r\nexport default class Layout extends Component {\r\n  state = { users: null };\r\n  render() {\r\n    const { users, selectUser, searchInput } = this.props;\r\n    return (\r\n      <div className=\"clients\">\r\n        {users\r\n          ? users.map(user => {\r\n              if (!user.name.search(searchInput)) {\r\n                return (\r\n                  <ClientCard\r\n                    selectUser={selectUser}\r\n                    id={user.id}\r\n                    key={user.name}\r\n                    name={user.name}\r\n                    company={user.company.name}\r\n                    catchPhrase={user.company.catchPhrase}\r\n                  />\r\n                );\r\n              }\r\n              if (!searchInput) {\r\n                return (\r\n                  <ClientCard\r\n                    selectUser={selectUser}\r\n                    id={user.id}\r\n                    key={user.name}\r\n                    name={user.name}\r\n                    company={user.company.name}\r\n                    catchPhrase={user.company.catchPhrase}\r\n                  />\r\n                );\r\n              }\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  row: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: 10,\r\n    width: 128,\r\n    height: 128\r\n  }\r\n};\r\n\r\nfunction ClientDetails({ classes, name, company, catchPhrase }) {\r\n  return (\r\n    <>\r\n      <div className={classes.row}>\r\n        <Avatar\r\n          alt={name}\r\n          src=\"https://via.placeholder.com/150/a08784\"\r\n          className={classes.avatar}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'left',\r\n          paddingLeft: '25px'\r\n        }}\r\n      >\r\n        <Typography variant=\"title\">NAME:</Typography>\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          {name}\r\n        </Typography>\r\n\r\n        <Typography variant=\"title\">COMPANY: </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          {company}\r\n        </Typography>\r\n        <Typography variant=\"title\">CatchPhrase: </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          {catchPhrase}\r\n        </Typography>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nClientDetails.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ClientDetails);\r\n","import React, { Component } from 'react';\r\nimport LayoutCss from './Layout.css';\r\nimport TopNavbar from '../components/TopNavbar/TopNavbar';\r\nimport Clients from './Clients/Clients';\r\nimport ClientDetails from '../components/ClientDetails/ClientDetails';\r\n\r\nexport default class Layout extends Component {\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({ users: data });\r\n      })\r\n      .then(fetch('https://randomuser.me/api/?page=3&results=10&seed=abc'))\r\n      .then(res => res.json())\r\n      .then(res => console.log(res))\r\n      .catch(error => console.log(error));\r\n  }\r\n  state = { users: null, currentUser: null, searchInput: null };\r\n  render() {\r\n    return (\r\n      <div className=\"root\">\r\n        <div style={{ width: '100%' }}>\r\n          <TopNavbar\r\n            searchChanged={value => this.setState({ searchInput: value })}\r\n          />\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"left-box\">\r\n            <Clients\r\n              searchInput={this.state.searchInput}\r\n              selectUser={userId => this.setState({ currentUser: userId })}\r\n              users={this.state.users}\r\n            />\r\n          </div>\r\n          <div className=\"right-box\">\r\n            {this.state.users && this.state.currentUser ? (\r\n              <ClientDetails\r\n                name={this.state.users[this.state.currentUser - 1].name}\r\n                company={\r\n                  this.state.users[this.state.currentUser - 1].company.name\r\n                }\r\n                catchPhrase={\r\n                  this.state.users[this.state.currentUser - 1].company\r\n                    .catchPhrase\r\n                }\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\nimport Layout from './containers/Layout';\nclass App extends Component {\n  render() {\n    return (\n      <CssBaseLine>\n        <Layout />\n      </CssBaseLine>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}