{"version":3,"sources":["components/TopNavbar/TopNavbar.js","components/ClientDetails/ClientDetails.js","components/ClientCard/ClientCard.js","containers/Clients/Clients.js","App.js","serviceWorker.js","index.js"],"names":["TopNavbar","state","searchInput","_this2","this","_this$props","props","classes","searchChanged","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","variant","Typography_default","title","color","grow","search","searchIcon","Search_default","InputBase_default","value","onChange","e","setState","target","placeholder","inputRoot","input","inputInput","Component","withStyles","theme","width","flexGrow","menuButton","marginLeft","marginRight","Object","defineProperty","display","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","height","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","image","marginBottom","flexDirection","avatar","margin","deleteIcon","padding","text","_ref","name","company","catchPhrase","unSelect","large","Fragment","index_es","onClick","Cancel_default","Avatar_default","alt","src","ClientCard","React","memo","id","selectUser","thumbnail","medium","_useState","useState","_useState2","slicedToArray","raised","setRaised","onTouchStartCapture","onTouchEndCapture","Card_default","card","CardActionArea_default","react","fallback","CardMedia_default","media","CardContent_default","gutterBottom","component","noWrap","maxWidth","users","usersPhotos","style","alignContent","map","user","index","ClientCard_ClientCard","key","Array","apply","App","currentUser","fetch","getUsersPhotos","json","results","objectSpread","picture","getUsersDataArray","usersDataArray","CssBaseline_default","components_TopNavbar_TopNavbar","react_css_blur","radius","Clients","userId","components_ClientDetails_ClientDetails","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3800f30b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block'\r\n    }\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto'\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%'\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nclass TopNavbar extends Component {\r\n  state = { searchInput: '' };\r\n  render() {\r\n    const { classes, searchChanged } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar variant=\"dense\">\r\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\">\r\n              Generic Client List\r\n            </Typography>\r\n            <div className={classes.grow} />\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                value={this.state.searchInput}\r\n                onChange={e => {\r\n                  this.setState({ searchInput: e.target.value });\r\n                  searchChanged(e.target.value);\r\n                }}\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput\r\n                }}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TopNavbar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Typography, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Cancel';\r\n\r\nconst styles = {\r\n  root: {\r\n    borderRadius: '20%'\r\n  },\r\n  image: {\r\n    marginBottom: '20px',\r\n    display: 'flex',\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: 10,\r\n    width: 128,\r\n    height: 128\r\n  },\r\n  deleteIcon: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    padding: '15px'\r\n  },\r\n  text: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'left',\r\n    paddingLeft: '15px',\r\n    paddingBottom: '25px'\r\n  }\r\n};\r\n\r\nconst ClientDetails = ({\r\n  classes,\r\n  name,\r\n  company,\r\n  catchPhrase,\r\n  unSelect,\r\n  large\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={classes.deleteIcon}>\r\n        <IconButton onClick={() => unSelect()}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div className={classes.root}>\r\n        <div className={classes.image}>\r\n          <Avatar alt={name} src={large} className={classes.avatar} />\r\n        </div>\r\n        <div className={classes.text}>\r\n          <Typography variant=\"title\">NAME:</Typography>\r\n          <Typography color=\"textSecondary\" variant=\"h6\">\r\n            {name}\r\n          </Typography>\r\n\r\n          <Typography variant=\"title\">COMPANY: </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"h6\">\r\n            {company}\r\n          </Typography>\r\n          <Typography variant=\"title\">CatchPhrase: </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"h6\">\r\n            {catchPhrase}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ClientDetails);\r\n","import React, { useState, Suspense } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n    width: 220\r\n  },\r\n  media: {\r\n    height: 130\r\n  },\r\n  root: {\r\n    paddingTop: '20px',\r\n    paddingBottom: '20px'\r\n  }\r\n};\r\n\r\nconst ClientCard = React.memo(\r\n  ({\r\n    classes,\r\n    name,\r\n    company,\r\n    catchPhrase,\r\n    id,\r\n    selectUser,\r\n    large,\r\n    medium,\r\n    thumbnail\r\n  }) => {\r\n    const [raised, setRaised] = useState(false);\r\n    return (\r\n      <div\r\n        onTouchStartCapture={() => {\r\n          setRaised(true);\r\n        }}\r\n        onTouchEndCapture={() => {\r\n          setRaised(false);\r\n        }}\r\n        className={classes.root}\r\n      >\r\n        <Card raised={raised} className={classes.card}>\r\n          <CardActionArea onClick={() => selectUser(id)}>\r\n            <Suspense\r\n              fallback={\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={thumbnail}\r\n                  title={name}\r\n                />\r\n              }\r\n            >\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={large ? large : thumbnail}\r\n                title={name}\r\n              />\r\n            </Suspense>\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" noWrap>\r\n                {!name ? 'Lorem Ipsum' : name}\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                {!company ? 'Beep ammet' : company}\r\n              </Typography>\r\n              <Typography component=\"p\">\r\n                {!catchPhrase ? 'Hippity Hoppity boop' : catchPhrase}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default withStyles(styles)(ClientCard);\r\n","import React from 'react';\r\nimport ClientCard from '../../components/ClientCard/ClientCard';\r\n\r\nexport default React.memo(({ users, selectUser, searchInput, usersPhotos }) => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      alignContent: 'center'\r\n    }}\r\n  >\r\n    <div className=\"clients\">\r\n      {users\r\n        ? users.map((user, index) => {\r\n            if (!user.name.search(searchInput)) {\r\n              return (\r\n                <ClientCard\r\n                  selectUser={selectUser}\r\n                  id={user.id}\r\n                  key={user.name}\r\n                  name={user.name}\r\n                  company={user.company.name}\r\n                  catchPhrase={user.company.catchPhrase}\r\n                  large={user.large}\r\n                  medium={user.medium}\r\n                  thumbnail={user.thumbnail}\r\n                />\r\n              );\r\n            }\r\n            if (!searchInput) {\r\n              return (\r\n                <ClientCard\r\n                  selectUser={selectUser}\r\n                  id={user.id}\r\n                  key={user.name}\r\n                  name={user.name}\r\n                  company={user.company.name}\r\n                  catchPhrase={user.company.catchPhrase}\r\n                  large={user.large}\r\n                  medium={user.medium}\r\n                  thumbnail={user.thumbnail}\r\n                />\r\n              );\r\n            }\r\n          })\r\n        : Array.apply(null, Array(10)).map((user, index) => {\r\n            return (\r\n              <ClientCard\r\n                selectUser={selectUser}\r\n                id={'........'}\r\n                key={index}\r\n                large={null}\r\n                medium={'........'}\r\n                thumbnail={usersPhotos ? usersPhotos[index].thumbnail : '...'}\r\n              />\r\n            );\r\n          })}\r\n    </div>\r\n  </div>\r\n));\r\n","import React, { Component } from 'react';\nimport CssBaseLine from '@material-ui/core/CssBaseline';\nimport LayoutCss from './App.css';\nimport Blur from 'react-css-blur';\n\nimport TopNavbar from './components/TopNavbar/TopNavbar';\nimport ClientDetails from './components/ClientDetails/ClientDetails';\nimport Clients from './containers/Clients/Clients';\nclass App extends Component {\n  async componentDidMount() {\n    const getUsersPhotos = await fetch(\n      'https://randomuser.me/api/?results=10&inc=picture'\n    );\n    const usersPhotos = await getUsersPhotos.json();\n    this.setState({\n      usersPhotos: usersPhotos.results.map((user, index) => ({\n        ...usersPhotos.results[index].picture\n      }))\n    });\n\n    const getUsersDataArray = await fetch(\n      'https://jsonplaceholder.typicode.com/users'\n    );\n    const usersDataArray = await getUsersDataArray.json();\n\n    this.setState({\n      users: usersDataArray.map((user, index) => ({\n        ...user,\n        ...usersPhotos.results[index].picture\n      }))\n    });\n  }\n  state = {\n    users: null,\n    currentUser: null,\n    searchInput: null,\n    usersPhotos: null\n  };\n\n  render() {\n    return (\n      <CssBaseLine>\n        <div className=\"root\">\n          <TopNavbar\n            searchChanged={value => this.setState({ searchInput: value })}\n          />\n          <div className=\"wrapper\">\n            <Blur radius={this.state.currentUser !== null ? '3px' : 0}>\n              <div className=\"left-box\">\n                {this.state.users ? (\n                  <Clients\n                    searchInput={this.state.searchInput}\n                    selectUser={userId =>\n                      this.setState({ currentUser: userId })\n                    }\n                    users={this.state.users}\n                    usersPhotos={this.state.usersPhotos}\n                  />\n                ) : (\n                  <Clients\n                    searchInput={this.state.searchInput}\n                    selectUser={userId =>\n                      this.setState({ currentUser: userId })\n                    }\n                    users={null}\n                    usersPhotos={this.state.usersPhotos}\n                  />\n                )}\n              </div>\n            </Blur>\n            <div className=\"right-box\">\n              {this.state.users && this.state.currentUser ? (\n                <ClientDetails\n                  unSelect={() => {\n                    this.setState({ currentUser: null });\n                  }}\n                  name={this.state.users[this.state.currentUser - 1].name}\n                  company={\n                    this.state.users[this.state.currentUser - 1].company.name\n                  }\n                  catchPhrase={\n                    this.state.users[this.state.currentUser - 1].company\n                      .catchPhrase\n                  }\n                  large={this.state.users[this.state.currentUser - 1].large}\n                />\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </CssBaseLine>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}